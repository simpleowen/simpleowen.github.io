<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>部署 on 我坦白~</title>
    <link>https://simpleowen.github.io/tags/%E9%83%A8%E7%BD%B2/</link>
    <description>Recent content in 部署 on 我坦白~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 May 2019 12:21:52 -0400</lastBuildDate>
    
	<atom:link href="https://simpleowen.github.io/tags/%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>将 Golang 程序部署到 Heroku</title>
      <link>https://simpleowen.github.io/post/heroku_golang_deploy/</link>
      <pubDate>Wed, 29 May 2019 12:21:52 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/heroku_golang_deploy/</guid>
      <description>环境 macOS git Golang 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // main.go package main import ( &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; ) func hello(w http.ResponseWriter, r *http.Request) { w.Write([]byte(&amp;#34;hello.world&amp;#34;)) } func main() { http.HandleFunc(&amp;#34;/hello&amp;#34;, hello) //err := http.ListenAndServe(&amp;#34;:8080&amp;#34;, nil) err := http.ListenAndServe(&amp;#34;:&amp;#34; + os.Getenv(&amp;#34;PORT&amp;#34;), nil) if err != nil { log.Fatal(err) } }</description>
    </item>
    
  </channel>
</rss>