<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 我坦白~</title>
    <link>https://simpleowen.github.io/post/</link>
    <description>Recent content in Posts on 我坦白~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 21 Jun 2019 10:24:14 -0400</lastBuildDate>
    
	<atom:link href="https://simpleowen.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Excel/GoogleSheet 转化成 Markdown 表格 </title>
      <link>https://simpleowen.github.io/post/excel2markdowntable/</link>
      <pubDate>Fri, 21 Jun 2019 10:24:14 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/excel2markdowntable/</guid>
      <description>网络上提供这种转换操作的服务还挺常见. GoogleSheet Add-ons G Suite Marketplace 有一个名为 MarkdownTableMaker 的附加服务能方便将 Sheet 格子转换成 Markdown Table MarkdownTableMaker - G Suite Marketplace 在线服务 以下服务都可将 Excel/GoogleSheet 格子转换成 Markdown</description>
    </item>
    
    <item>
      <title>在 Slack 中订阅 Feeds</title>
      <link>https://simpleowen.github.io/post/rss_in_slack/</link>
      <pubDate>Fri, 21 Jun 2019 01:32:14 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/rss_in_slack/</guid>
      <description>经常打开 Slack, 如果能将 feeds 也集成到 Slack, 就能减少一些 APP 切换成本. 前提 Slack 已登录 已知 Feed URL 集成 Slack 为 WorkSpace 提供了 RSS APP, 可以订阅各类 feeds. RSS 会发送订阅内容到配置的 channel 或 user. 所</description>
    </item>
    
    <item>
      <title>Github 基本认证</title>
      <link>https://simpleowen.github.io/post/basic_authorization_github/</link>
      <pubDate>Wed, 19 Jun 2019 01:39:24 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/basic_authorization_github/</guid>
      <description>通过 Github API v3 进行认证的方式有 2 类 Basic authentication Username and Password Personal Access Token OAuth2 OAuth2 token (sent in a header) OAuth2 key/secret 这 3 种认证方式的认证格式如下: 1 2 3 curl -u &amp;#34;username&amp;#34; https://api.github.com curl -H &amp;#34;Authorization: token OAUTH-TOKEN&amp;#34; https://api.github.com curl &amp;#39;https://api.github.com/users/whatever?client_id=xxxx&amp;amp;client_secret=yyyy&amp;#39; 本文只介绍 Github 的基</description>
    </item>
    
    <item>
      <title>Shell 初步</title>
      <link>https://simpleowen.github.io/post/shell_intro/</link>
      <pubDate>Tue, 18 Jun 2019 10:29:09 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/shell_intro/</guid>
      <description>Shell 是 Unix-Like 操作系统家族中被频繁使用的人机接口 比较常见的 Shell 有以下几种: sh ksh csh tcsh bash zsh Shell 配置 Shell 配置文件可以分为系统级别的配置文件和用户级别的配置文件 系</description>
    </item>
    
    <item>
      <title>PostgreSQL 常用命令</title>
      <link>https://simpleowen.github.io/post/postgresql_ops/</link>
      <pubDate>Fri, 07 Jun 2019 10:35:25 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/postgresql_ops/</guid>
      <description>查看当前主机 PostgreSQL 安装路径及版本 which psql psql &amp;ndash;version 修改 postgres 系统用户密码 sudo passwd -d postgres sudo -u postgres passwd 查看当前连接信息 \conninfo 列出所有用户(角色) \du 列出所有数据库 \l or \list 切换数据库</description>
    </item>
    
    <item>
      <title>我的工具箱</title>
      <link>https://simpleowen.github.io/post/toolbox/</link>
      <pubDate>Wed, 29 May 2019 12:33:36 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/toolbox/</guid>
      <description>macOS 输出平台 github.com 版本管理 git 命令行 iTerm shell zsh shell 框架 oh-my-zsh 中文输入法 鼠须管 Squirrel 远程协助 TeamViewer 网络会议 Zoom 团队沟通 Slack 倍洽 DingTalk markdown 编辑器 typora sublime text 编程 IDE VSCode 编程文档 Dash 云盘 百度网盘</description>
    </item>
    
    <item>
      <title>[译] golang 中的 io 流</title>
      <link>https://simpleowen.github.io/post/golang_io/</link>
      <pubDate>Wed, 29 May 2019 12:30:37 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/golang_io/</guid>
      <description>原文链接 Streaming IO in Go – Learning the Go Programming Language – Medium 以下为译文 在 Go 中，输入输出操作是通过能读能写的字节流数据模型来实现的。为此，io 包提供了 io.Reader 和 io.Writer 接口来进行输入</description>
    </item>
    
    <item>
      <title>在 Linux 下安装 Elasticsearch</title>
      <link>https://simpleowen.github.io/post/es_installation_on_linux/</link>
      <pubDate>Wed, 29 May 2019 12:28:17 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/es_installation_on_linux/</guid>
      <description>环境 Ubuntu 18.04 前提 官方推荐 Java 8 下载 curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.0.0-linux-x86_64.tar.gz tar -xvf elasticsearch-7.0.0-linux-x86_64.tar.gz 启动 cd elasticsearch-7.0.0/bin ./elasticsearch 配置服务 ip 和 端口 进入 elasticsearch 安装目录，打开 config/elasticsearch.yml 配置 net.host 和 http.port net.host: 0.0.0.0 http.port: 9200 停止 CTRL + C 坑 用户 Linux 下不要使用 root 用</description>
    </item>
    
    <item>
      <title>使用 Pandoc 将 markdown 文档生成幻灯片</title>
      <link>https://simpleowen.github.io/post/pandoc2slides/</link>
      <pubDate>Wed, 29 May 2019 12:25:55 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/pandoc2slides/</guid>
      <description>目标 生成一份 Pandoc 2 Slide 这样的幻灯片 幻灯片能往水平和垂直两个方向运动 环境 macOS 依赖 Pandoc Reveal.js 安装 安装 Pandoc brew install pandoc pandoc &amp;ndash;version 安装 Reveal.js 从 Releases · hakimel/reveal.js 下载解压, 将目录名改为 reveal.js 使用 新</description>
    </item>
    
    <item>
      <title>将 Golang 程序部署到 Heroku</title>
      <link>https://simpleowen.github.io/post/heroku_golang_deploy/</link>
      <pubDate>Wed, 29 May 2019 12:21:52 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/heroku_golang_deploy/</guid>
      <description>环境 macOS git Golang 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // main.go package main import ( &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; ) func hello(w http.ResponseWriter, r *http.Request) { w.Write([]byte(&amp;#34;hello.world&amp;#34;)) } func main() { http.HandleFunc(&amp;#34;/hello&amp;#34;, hello) //err := http.ListenAndServe(&amp;#34;:8080&amp;#34;, nil) err := http.ListenAndServe(&amp;#34;:&amp;#34; + os.Getenv(&amp;#34;PORT&amp;#34;), nil) if err != nil { log.Fatal(err) } }</description>
    </item>
    
    <item>
      <title>Usefull Go Links</title>
      <link>https://simpleowen.github.io/post/golang_usefull_links/</link>
      <pubDate>Wed, 29 May 2019 12:20:07 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/golang_usefull_links/</guid>
      <description>Groups GoUserGroups · golang/go Wiki Go程式語言 (Golang Taiwan, Gopher Taipei) Singapore Gophers golang-nuts – Google Groups Golang-China – Google Groups golang-announce – Google Groups Go Time Podcast Go中国技术社区 - golang Go Forum Join Our New Slack Community For Gophers GopherAcademy Go Tools Chrome Extensions Go Playground Addons - Chrome Web Store Editor plugins and IDEs The Go Playground</description>
    </item>
    
    <item>
      <title>常用 golang.org 镜像包</title>
      <link>https://simpleowen.github.io/post/go_mod/</link>
      <pubDate>Wed, 29 May 2019 12:18:20 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/go_mod/</guid>
      <description>由于众所周知的原因，国内无法下载位于谷歌服务器上的包，如 golang.org/x/net, golang.org/x/text , golang.org/x/sys，甚至使用 VPN 的情况下，也无法下载 但这些包基本都</description>
    </item>
    
    <item>
      <title>Golang 获取 Github API 分页总页数</title>
      <link>https://simpleowen.github.io/post/github_api_pagination/</link>
      <pubDate>Wed, 29 May 2019 12:15:13 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/github_api_pagination/</guid>
      <description>Github API 会自动对所请求的项目进行分页 不同的 API 会有不同的每页数目，有的 API 默认每页 100 项，有的 API 默认每页 30 项，可以通过 per_page=xxx 参数改变每页展示项目数，但最大</description>
    </item>
    
    <item>
      <title>VScode 安装 go 插件</title>
      <link>https://simpleowen.github.io/post/vscode_go_extensions/</link>
      <pubDate>Wed, 29 May 2019 12:11:34 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/vscode_go_extensions/</guid>
      <description>在 VScode 使用过程中，会提示安装 各种 go 插件，点击安装后，很多插件安装都会失败 其中，安装失败的包主要是 golang.org 上的包(由于众所周知的原因)，而很多其他包又</description>
    </item>
    
    <item>
      <title>鼠须管(squirrel)使用全套英文标点</title>
      <link>https://simpleowen.github.io/post/squirrel_punctuator/</link>
      <pubDate>Wed, 29 May 2019 11:06:41 -0400</pubDate>
      
      <guid>https://simpleowen.github.io/post/squirrel_punctuator/</guid>
      <description>鼠须管是一个自定义程度非常高的输入法 配置方法 下载一个 yaml 文件 alternative.yaml 修改 alternative.yaml 文件的 config_version: &amp;quot;0.3&amp;quot; 中的版本号为自定义配置文件版本号 在自定义配置文件中打 patch 我的自定义</description>
    </item>
    
  </channel>
</rss>